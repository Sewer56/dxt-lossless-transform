[package]
name = "dxt-lossless-transform-bc1"
version = "0.1.0"
edition = "2021"
description = "Fast lossless transforms for BC1 texture data that improve their compression ratio. This is an unstable crate containing the raw implementation."
repository = "https://github.com/Sewer56/dxt-lossless-transform"
license-file = "LICENSE"
include = ["src/**/*"]
readme = "README.MD"

[features]
default = ["std"]
std = ["dxt-lossless-transform-api-common/std"]
# See README.md for more information on using Profile-Guided Optimization.
pgo = []
# Use CPU features selected at compile time.
no-runtime-cpu-detection = []
# Use nightly compiler features (AVX512)
nightly = ["dxt-lossless-transform-common/nightly", "safe-allocator-api/nightly"]
# Code only required for benchmarks.
bench = []
# Experimental features, not ready for prime time. Use at your own risk!
experimental = []

[dependencies]
dxt-lossless-transform-common = { path = "../dxt-lossless-transform-common" }
dxt-lossless-transform-api-common = { path = "../../api/dxt-lossless-transform-api-common", default-features = false }
likely_stable = "0.1.3"
derive-enum-all-values = "0.2.1"
thiserror = "2.0.12"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dev-dependencies]
criterion = "0.5.1"
rstest = "0.25.0"
safe-allocator-api = "0.4.0"

[target.'cfg(all(any(target_os = "linux", target_os = "macos"), any(target_arch = "x86", target_arch = "x86_64", target_arch = "aarch64")))'.dev-dependencies]
pprof = { version = "0.14", features = ["flamegraph", "criterion"] }

# Benchmark Stuff
[[bench]]
name = "transform_standard"
path = "benches/transform_standard/main.rs"
harness = false
required-features = ["bench"]

[[bench]]
name = "untransform_standard"
path = "benches/untransform_standard/main.rs"
harness = false
required-features = ["bench"]

[[bench]]
name = "block_decode"
path = "benches/block_decode/main.rs"
harness = false

[[bench]]
name = "normalize_blocks"
path = "benches/normalize_blocks/main.rs"
harness = false

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ["cfg(tarpaulin_include)"] }